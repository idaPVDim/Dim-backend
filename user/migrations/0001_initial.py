# Generated by Django 5.2.5 on 2025-08-23 20:01

import django.db.models.deletion
import django.utils.timezone
import user.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='pr√©nom')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='nom')),
                ('role', models.CharField(choices=[('client', 'Client'), ('technicien', 'Technicien'), ('admin', 'Administrateur')], default='client', max_length=20)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'utilisateur',
                'verbose_name_plural': 'utilisateurs',
                'ordering': ['email'],
            },
            managers=[
                ('objects', user.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProfilClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('consommation_annuelle_moyenne_kwh', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profil_client', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfilTechnicien',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certifications', models.TextField(blank=True, null=True)),
                ('zone_couverture', models.CharField(blank=True, max_length=255, null=True)),
                ('is_certified', models.BooleanField(default=False)),
                ('id_document', models.FileField(blank=True, null=True, upload_to='technician_docs/ids/')),
                ('formation_document', models.FileField(blank=True, null=True, upload_to='technician_docs/formations/')),
                ('certification_docs', models.FileField(blank=True, null=True, upload_to='technician_docs/certs/')),
                ('autorisation_docs', models.FileField(blank=True, null=True, upload_to='technician_docs/autorisations/')),
                ('autres_docs', models.FileField(blank=True, null=True, upload_to='technician_docs/autres/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profil_technicien', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
